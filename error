    // MotioCI server
    COGNOS_SERVER_URL  = "https://cgrptmcip01.cloud.cammis.ca.gov"

    // Cognos API bases (fix: use /bi, not /api to avoid 404)
    COGNOS_API_BASE_DEV = "https://dhcsdevtestcog.ca.analytics.ibm.com/bi"
    COGNOS_API_BASE_PRD = "https://dhcsprodcognos.ca.analytics.ibm.com/bi"

    // Cognos namespace + instance IDs in MotioCI
    COGNOS_NAMESPACE   = "AzureAD"
    SOURCE_INSTANCE_ID = "3"
    TARGET_INSTANCE_ID = "1"
    PROJECT_NAME       = "Demo"
  }

  options {
    disableConcurrentBuilds()
    timestamps()
  }

  stages {
    stage("initialize") {
      steps {
        script {
          echo "Branch: ${env.GIT_BRANCH}"
          echo "MotioCI Server: ${env.COGNOS_SERVER_URL}"
          echo "DevTest Cognos Base: ${env.COGNOS_API_BASE_DEV}"
          echo "Prod Cognos Base: ${env.COGNOS_API_BASE_PRD}"
        }
      }
    }

    stage('Check Python Availability') {
      steps {
        container('python') {
          sh '''
            set -e
            echo "Checking for Python3..."
            which python3 || true
            python3 --version || true
          '''
        }
      }
    }

    // === New Stage: DevTest Passport ===
    stage('Auth: Cognos API session (DEVTEST)') {
      steps {
        container('python') {
          withCredentials([string(credentialsId: 'cognos-api-key-dev', variable: 'COGNOS_API_KEY_DEV')]) {
            sh '''
              set -eu
              (set -o pipefail) 2>/dev/null || true

              echo "Starting Cognos API session (DEVTEST)..."
              BASE="${COGNOS_API_BASE_DEV}/v1"

              rm -f login.json session.json headers.txt cookies.txt || true
              mkdir -p MotioCI/api

              cat > login.json <<JSON
{ "parameters": [ { "name": "CAMAPILoginKey", "value": "${COGNOS_API_KEY_DEV}" } ] }
JSON

              curl --fail-with-body -sS -X PUT "$BASE/session" \
                   -H "Content-Type: application/json" \
                   -d @login.json \
                   -c cookies.txt -b cookies.txt \
                   -D headers.txt -o session.json

              SESSION_KEY=$(python3 -c 'import json; print(json.load(open("session.json")).get("session_key",""))')
              if [ -z "$SESSION_KEY" ]; then
                echo "ERROR: No session_key from DEVTEST Cognos."
                cat session.json || true
                exit 1
              fi

              case "$SESSION_KEY" in
                "CAM "*) AUTH_VALUE="$SESSION_KEY" ;;
                "CAM"*)  AUTH_VALUE="$SESSION_KEY" ;;
                *)       AUTH_VALUE="CAM $SESSION_KEY" ;;
              esac

              echo "Cognos API session verified for DEVTEST."
              printf "DEVTEST_CAMPASSPORT='%s'\n" "$AUTH_VALUE" > MotioCI/api/motio_env_dev
            '''
          }
        }
        script {
          def envFile = readFile('MotioCI/api/motio_env_dev').trim()
          envFile.split("\n").each { line ->
            def (k,v) = line.split('=', 2)
            if (v.startsWith("'") && v.endsWith("'")) { v = v.substring(1, v.length()-1) }
            env[k] = v
          }
          echo "Captured DevTest Passport: ${env.DEVTEST_CAMPASSPORT.take(15)}..."
        }
      }
    }

    // === New Stage: Prod Passport ===
    stage('Auth: Cognos API session (PROD)') {
      steps {
        container('python') {
          withCredentials([string(credentialsId: 'cognos-api-key-prd', variable: 'COGNOS_API_KEY_PRD')]) {
            sh '''
              set -eu
              (set -o pipefail) 2>/dev/null || true

              echo "Starting Cognos API session (PROD)..."
              BASE="${COGNOS_API_BASE_PRD}/v1"

              rm -f login.json session.json headers.txt cookies.txt || true
              mkdir -p MotioCI/api

              cat > login.json <<JSON
{ "parameters": [ { "name": "CAMAPILoginKey", "value": "${COGNOS_API_KEY_PRD}" } ] }
JSON

              curl --fail-with-body -sS -X PUT "$BASE/session" \
                   -H "Content-Type: application/json" \
                   -d @login.json \
                   -c cookies.txt -b cookies.txt \
                   -D headers.txt -o session.json

              SESSION_KEY=$(python3 -c 'import json; print(json.load(open("session.json")).get("session_key",""))')
              if [ -z "$SESSION_KEY" ]; then
                echo "ERROR: No session_key from PROD Cognos."
                cat session.json || true
                exit 1
              fi

              case "$SESSION_KEY" in
                "CAM "*) AUTH_VALUE="$SESSION_KEY" ;;
                "CAM"*)  AUTH_VALUE="$SESSION_KEY" ;;
                *)       AUTH_VALUE="CAM $SESSION_KEY" ;;
              esac

              echo "Cognos API session verified for PROD."
              printf "PROD_CAMPASSPORT='%s'\n" "$AUTH_VALUE" > MotioCI/api/motio_env_prod
            '''
          }
        }
        script {
          def envFile = readFile('MotioCI/api/motio_env_prod').trim()
          envFile.split("\n").each { line ->
            def (k,v) = line.split('=', 2)
            if (v.startsWith("'") && v.endsWith("'")) { v = v.substring(1, v.length()-1) }
            env[k] = v
          }
          echo "Captured Prod Passport: ${env.PROD_CAMPASSPORT.take(15)}..."
        }
      }
    }
  }
}
